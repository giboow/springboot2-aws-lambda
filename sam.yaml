AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: Example SpringBoot API written with spring with the aws-serverless-java-container library

Globals:
  Api:
    # API Gateway regional endpoints
    EndpointConfiguration: REGIONAL

Resources:
  Springboot2AwsLambdaFunction:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fr.giboow.springboot2awslambda.StreamLambdaHandler::handleRequest
      Runtime: java11
      CodeUri: build/distributions/springboot2-aws-lambda-0.0.1-SNAPSHOT.zip
      MemorySize: 512
      Policies: AWSLambdaBasicExecutionRole
      Timeout: 30
      Events:
        GetResource:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: any
  AwsLambdaSqsLocal:
    Type: AWS::Serverless::Function
    Properties:
      Handler: fr.giboow.springboot2awslambda.SQSEventHandler
      Description: For AWS Sqs Queue
      Runtime: java11
      CodeUri: build/distributions/springboot2-aws-lambda-0.0.1-SNAPSHOT.zip
      Events:
        MySQSEvent:
          Type: SQS
          Properties:
            Queue: !GetAtt MySqsQueue.Arn
            BatchSize: 10
      Environment:
        Variables:
          SPRING_PROFILES_ACTIVE: prod
  MySqsQueue:
    Type: AWS::SQS::Queue


Outputs:
  Springboot2AwsLambdaApi:
    Description: URL for application
    Value: !Sub 'https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/ping'
    Export:
      Name: Springboot2AwsLambda